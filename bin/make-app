#!/bin/bash -e

if [[ -z $1 ]]; then
    echo usage: make-app APP >&2
    return 1
fi

app_dir="$1"
app=$(tr '[:upper:]' '[:lower:]' <<< $app_dir)
lang=${lang:-kotlin}

if [[ -d $app_dir ]]; then
    echo Error: app $app_dir already exists >&2
    exit 1
fi

mkdir -p $app_dir/app
cd $app_dir/app

mkdir -p src/main/java/com/example/$app libs src/main/res/{layout,values,drawable}

cat > src/main/AndroidManifest.xml << EOF
<?xml version="1.0"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    android:versionCode="0"
    android:versionName="0">

    <application
        android:label="$app_dir"
        android:theme="@style/Theme.AppCompat.DayNight">
        <activity android:name=".MainActivity" android:exported="true">
            <intent-filter>
                <category android:name="android.intent.category.LAUNCHER" />
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>
    </application>
</manifest>
EOF

if [[ "$lang" = java ]]; then
    cat > src/main/java/com/example/$app/MainActivity.java <<- EOF
	package com.example.$app;

	import android.os.Bundle;

	import androidx.appcompat.app.AppCompatActivity;

	public class MainActivity extends AppCompatActivity {
	    @Override
	    protected void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        setContentView(R.layout.activity_main);
	    }
	}
	EOF
else
    cat > src/main/java/com/example/$app/MainActivity.kt <<- EOF
	package com.example.$app

	import android.os.Bundle

	import androidx.appcompat.app.AppCompatActivity

	class MainActivity : AppCompatActivity() {
	    override fun onCreate(savedInstanceState: Bundle?) {
	        super.onCreate(savedInstanceState)
	        setContentView(R.layout.activity_main)
	    }
	}
	EOF
fi

cat > src/main/res/values/strings.xml << EOF
<resources>
    <string name="app_name">$app_dir</string>
    <string name="msg">Hello there, I\'m an evil app :)</string>
    <string name="menu_settings">Settings</string>
    <string name="title_activity_main">MainActivity</string>
</resources>
EOF

cat > src/main/res/layout/activity_main.xml << EOF
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent" >

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_centerVertical="true"
        android:text="@string/msg"
        tools:context=".MainActivity" />
</RelativeLayout>
EOF

cat > build.gradle.kts << EOF
plugins {
    id("com.android.application")$([[ "$lang" = kotlin ]] && echo '
    id("org.jetbrains.kotlin.android")')
}

android {
    namespace = "com.example.$app"
    compileSdk = 33

    defaultConfig {
        applicationId = "com.example.$app"
        minSdk = 33
        targetSdk = 33
        versionCode = 1
        versionName = "1.0"
    }

    buildTypes {
        release {
            isMinifyEnabled = false
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }$([[ "$lang" = kotlin ]] && echo '
    kotlinOptions {
        jvmTarget = "1.8"
    }')
}

dependencies {$([[ "$lang" = kotlin ]] && echo '
    implementation("androidx.core:core-ktx:1.9.0")')
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("com.google.android.material:material:1.9.0")
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
}
EOF

cd ..

cat > build.gradle.kts << EOF
plugins {
    id("com.android.application") version "8.1.0" apply false$([[ "$lang" = kotlin ]] && echo '
    id("org.jetbrains.kotlin.android") version "1.9.0" apply false')
}
EOF

cat > settings.gradle.kts << EOF
pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.name = "$app_dir"
include(":app")
EOF

cat > gradle.properties << EOF
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
android.useAndroidX=true
android.nonTransitiveRClass=true
EOF

cat > 'local.properties' << EOF
sdk.dir=$(realpath $(realpath $(which sdkmanager))/../../../..)
EOF
